%% Flight Path Simulation and Plotting

% Simulation parameters
tf = 5000;       % Simulation duration
dt = 0.1;       % Time step (sampling time)
t = 0:dt:tf-dt; % Time vector
num_samples = length(t);

% Flight path values (in radians)
thetaClimb = deg2rad(10); 
thetaDescent = deg2rad(-10);
thetaCruise = 0;
CruiseAlt = 457.2; % 1500 ft in meters


% Initialize flight path variables
theta = thetaClimb; % Flight path angle
psi = 0;            % Bank angle

% Initialize aircraft state vectors
x = zeros(1, num_samples);
y = zeros(1, num_samples);
z = zeros(1, num_samples);
psiV = zeros(1, num_samples);
thetaV = zeros(1, num_samples);
v = 66.67 * ones(1, num_samples); % 240 km/h (129.59 kts) cruise speed


for i = 2:num_samples
    % Update position using 2D kinematic equations
    x(i) = x(i-1) + dt * v(i-1) * cos(theta) * cos(psi);
    y(i) = y(i-1) + dt * v(i-1) * cos(theta) * sin(psi);
    z(i) = z(i-1) + dt * v(i-1) * sin(theta);
    
    % Break loop on touchdown and trim unused vector portions
    if z(i) < 0 
        break;
    end

    % Climb phase
    if z(i) > CruiseAlt && x(i) > 0
        theta = thetaCruise; % Level off
        if psi < deg2rad(180) % Bank turn
            if psi == 0
                Lclimb = x(i); % Distance of climb for descent reference
            end
            psi = psi + deg2rad(0.3); % Rate one turn
        end
    end

    % Cruise phase with second bank turn for runway alignment
    if z(i) > CruiseAlt && x(i) <= -Lclimb
        if psi < deg2rad(360)
            psi = psi + deg2rad(0.3); % Bank towards runway
        end
    end

    % Descent phase
    if psi >= deg2rad(359.8)
        psi = deg2rad(360);
        theta = thetaDescent;
    end

    % Update psi and theta for plotting
    psiV(i) = psi; 
    thetaV(i) = theta;
end

% Trim unused vector portions
xF = x(1:i);
yF = y(1:i);
zF = z(1:i);
psiVF = psiV(1:i);
thetaVF = thetaV(1:i);
tF = t(1:i);

%% 3D Trajectory plot
figure(1);
plot3(xF, yF, zF, 'LineWidth', 1); grid on;
title('3D Trajectory');
xlabel('x (m)');
ylabel('y (m)');
zlabel('z (m)');
axis equal;

%% Aircraft heading and x position against time
figure(2);
clf; hold on;
yyaxis left
plot(tF, psiVF);
ylabel('Heading (rad)');
yyaxis right
plot(tF, xF, '-*');
ylabel('x (m)');
grid on;
title('Flight Heading and Position in x');
xlabel('Time (s)');
xlim([0, (length(tF) * dt)]);
hold off;
