%% The following program will display the following flight path:
%climb to 1500ft (457.2m) at flight path angle of 10 degrees, level off and rate one bank turn 180degrees, 
%cruise at 1500ft until aircraft reaches same distance from runway that it was when climb finished,
%rate one bank turn 180 degrees, descend at flight path angle -10 degrees until reach 0 altitude

%%parameters can be adjusted to change the flight path.


%% Initialise time vector

tf = 300;     % Simulation duration
dt = 0.1;  % Time step (sampling time)
t = 0:dt:tf-dt;
num_samples = length(t);


%% Flight path values
thetaClimb = deg2rad(10); 
thetaDescent = deg2rad(10);
thetaCruise = 0;
CruiseAlt = 457.2;

%% initialise flight path variables

theta = thetaClimb; %flight path angle
psi = 0; %bank angle

%% Initialise aircraft state vectors
x = zeros(1,num_samples);
y = zeros(1,num_samples);
z = zeros(1,num_samples);
psiV = zeros(1,num_samples);
thetaV = zeros(1,num_samples);
v = 66.67*ones(1,num_samples); %240km/h (129.59kts) cruise speed

for i = 2:num_samples
    
    %2D kinematic equations
    x(i) = x(i-1) + dt*v(i-1)*cos(theta)*cos(psi);
    y(i) = y(i-1) + dt*v(i-1)*cos(theta)*sin(psi);
    z(i) = z(i-1) + dt*v(i-1)*sin(theta);
    
    %break from for loop on touchdown and remove extra zeros from initialised
    %vectors
    if z(i) < 0 
        disp("loop break")
        xF = x(1:i);
        yF = y(1:i);
        zF = z(1:i);
        psiVF = psiV(1:i);
        thetaVF = thetaV(1:i);
        tF = t(1:i);
        break
    end
   

    %% The values of the following code can be edited to change the dimensions of the circuit

    if z(i) > CruiseAlt && x(i) > 0 %1500 ft after climb away from runway
        theta = thetaCruise; %level plane
        
        if psi < deg2rad(180) %check if aircraft needs to bank
            
            if psi == 0
                Lclimb = x(i);% find distance of climb to be used as reference for descent
            end
           
            psi = psi+deg2rad(0.3); %rate 1 turn 3deg/s (dt is 0.1)
        end
    end
    
    
    if z(i) > 457.2 && x(i) <= ((-1)*Lclimb) %1500ft cruising and ready to bank for runway alignment

        if psi < deg2rad(360)
            psi = psi+deg2rad(0.3); %bank towards runway
  
        end    
    end
    
    %% update theta for descent
    %359.8 was used as control angle to fix matlab rounding accuracy error
    %in deg2rad conversion
    if psi >= deg2rad(359.8)
                psi = deg2rad(360);
                theta = thetaDescent;

    end
    
    %update psi and theta value for later plotting
    psiV(i) = psi; 
    thetaV(i) = theta;
end




%% 3D Trajectory plot
f1 = figure(1); hold off
    %plot(x,y,'LineWidth',1); grid on
    plot3(xF,yF,zF,'LineWidth',1); grid on
    title('2D trajectory');
    xlabel('x (m)');
    ylabel('y (m)');
    axis equal

%% aircraft heading and x position against time
f2 = figure(2); hold off
    clf; hold on;
    yyaxis left
    plot(tF,psiVF);
    ylabel('Heading (rad)');
    yyaxis right
    plot(tF,xF, '-*');
    ylabel('x (m)');
    hold off;
    grid on;
    
    title('Flight Heading and Position in x');
    xlabel('Time (s)');
    xlim([0,(length(tF)*dt)]);
